/*
This function going to close ticket if incoming threads contains specified keywords

Connection Creation:
1) Setup->Connection
2) Create New connection
3) Choose ZohoOAuth Service
4) Enter connection name and connection link name
5) Choose desk related scopes
6) Create and Connect then replace connection linkname in code instead “deskoperation”

SCOPE :Desk.tickets.UPDATE, Desk.tickets.READ
*/
Module : Ticket

Argument:
Name : ticketID - Value : Ticket Id
Name : description - Value : Description

Sample Code:

ORGID = "644088596";

getTicket = invokeurl
[
	url :"https://desk.zoho.com/api/v1/tickets/" + ticketID + "/threads"
	type :GET
	connection : “deskoperation”
];
status = "Closed";
//info getTicket;
latestThreadID = getTicket.get("data").get(0).get("id");
//info latestThreadID;
getTicketThread = invokeurl
[
	url :"https://desk.zoho.com/api/v1/tickets/" + ticketID + "/threads/" + latestThreadID
	type :GET
	connection : “deskoperation”
];
//info getTicketThread;
jsonString = {"status":status};
ThreadContent = getTicketThread.get("content");
ThreadContent = ThreadContent.toString();
info ThreadContent;
if(ThreadContent != "" && ThreadContent != null)
{
	if(ThreadContent.containsIgnoreCase("sifremi unuttum"))
	{
		updateTicket = invokeurl
		[
			url :"https://desk.zoho.com/api/v1/tickets/" + ticketID
			type :PATCH
			parameters:jsonString.toString()
			connection : “deskoperation”
		];
	}
}
if(description != "" && description != null)
{
	if(description.containsIgnoreCase("sifremi unuttum"))
	{
		updateTicket = invokeurl
		[
			url :"https://desk.zoho.com/api/v1/tickets/" + ticketID
			type :PATCH
			parameters:jsonString.toString()
			connection : “deskoperation”
		];
	}
}